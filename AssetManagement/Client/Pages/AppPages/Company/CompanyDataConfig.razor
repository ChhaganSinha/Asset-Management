@page "/company-config"
@page "/company-config/{Id:int}"
@using AssetManagement.Client.Client
@using AssetManagement.Client.Pages.AppPages.Company.Component
@using AssetManagement.Client.Shared.Popup
@using AssetManagement.Client.Shared
@using AssetManagement.Dto.Models
@inject AppClient client
@inject ILogger<CompanyDataConfig> logger
@inject NavigationManager NavigationManager
@inject PermissionService PermissionService
@attribute [Authorize]

<Breadcrumb Items="breadcrumbItems" />

@if (canView)
{
    <div class="card" style="background:darkgrey">
        <div class="card-body">
            @if (model == null && !TaskCompleted)
            {
                <div class="loader-container mt-4">
                    <div class="loader"></div>
                </div>
            }
            else
            {
                <EditForm Model="@model" OnValidSubmit="@OnValidSubmit">
                    <DataAnnotationsValidator />

                    <!-- Company Info -->
                    <div class="row g-3 mb-3">
                        <div class="col-md-3">
                            <label class="form-label bold-font required-field">Company Code</label>
                            <InputText id="CompanyCode" @bind-Value="model.CompanyCode" class="form-control" />
                            <ValidationMessage For="() => model.CompanyCode" />
                        </div>
                        <div class="col-md-5">
                            <label class="form-label bold-font required-field">Company Name</label>
                            <InputText id="Name" @bind-Value="model.Name" class="form-control" />
                            <ValidationMessage For="() => model.Name" />
                        </div>
                        <div class="col-md-4">
                            <label class="form-label bold-font required-field">GST Number</label>
                            <InputText id="GSTNNumber" @bind-Value="model.GSTNNumber" class="form-control" />
                            <ValidationMessage For="() => model.GSTNNumber" />
                        </div>
                    </div>

                    <!-- Registration -->
                    <div class="row g-3 mb-3">
                        <div class="col-md-4">
                            <label class="form-label bold-font required-field">Registration With</label>
                            <InputSelect @bind-Value="model.RegistrationWith" class="form-select" id="RegistrationWith">
                                @foreach (var val in Enum.GetValues(typeof(RegistrationWith)))
                                {
                                    <option value="@val">@val</option>
                                }
                            </InputSelect>
                        </div>
                        @if (model.RegistrationWith == RegistrationWith.StartUp)
                        {
                            <div class="col-md-4">
                                <label class="form-label bold-font required-field">Startup No.</label>
                                <InputText id="StartupNo" @bind-Value="model.StartupNumber" class="form-control" />
                                <ValidationMessage For="() => model.StartupNumber" />
                            </div>
                        }
                        @if (model.RegistrationWith == RegistrationWith.MSME)
                        {
                            <div class="col-md-4">
                                <label class="form-label bold-font required-field">UAM No.</label>
                                <InputText id="UAMNo" @bind-Value="model.UAMNumber" class="form-control" />
                                <ValidationMessage For="() => model.UAMNumber" />
                            </div>
                        }
                    </div>

                    <!-- Incorporation -->
                    <div class="row g-3 mb-3">
                        <div class="col-md-4">
                            <label class="form-label bold-font required-field">Incorporation No</label>
                            <InputText id="IncorporationNo" @bind-Value="model.IncorporationNumber" class="form-control" />
                            <ValidationMessage For="() => model.IncorporationNumber" />
                        </div>
                        <div class="col-md-4">
                            <label class="form-label bold-font required-field">Incorporation Date</label>
                            <InputDate id="IncorporationDate" @bind-Value="model.IncorporationDate" class="form-control" />
                            <ValidationMessage For="() => model.IncorporationDate" />
                        </div>
                        <div class="col-md-4">
                            <label class="form-label bold-font required-field">TAN Number</label>
                            <InputText id="TANNo" @bind-Value="model.TANNumber" class="form-control" />
                            <ValidationMessage For="() => model.TANNumber" />
                        </div>
                    </div>

                    <!-- Statutory Numbers -->
                    <div class="row g-3 mb-3">
                        <div class="col-md-4">
                            <label class="form-label bold-font required-field">PAN Number</label>
                            <InputText id="PanNo" @bind-Value="model.PanNumber" class="form-control" />
                            <ValidationMessage For="() => model.PanNumber" />
                        </div>
                        <div class="col-md-4">
                            <label class="form-label bold-font">ESI Number</label>
                            <InputText id="ESINO" @bind-Value="model.ESINumber" class="form-control" />
                            <ValidationMessage For="() => model.ESINumber" />
                        </div>
                        <div class="col-md-4">
                            <label class="form-label bold-font">PF Number</label>
                            <InputText id="PFNo" @bind-Value="model.PFNumber" class="form-control" />
                            <ValidationMessage For="() => model.PFNumber" />
                        </div>                     
                    </div>

                    <!-- Contact -->
                    <div class="row g-3 mb-3">
                        <div class="col-md-4">
                            <label class="form-label bold-font required-field">Contact Person</label>
                            <InputText id="ContactPerson" @bind-Value="model.ContactPerson" class="form-control" />
                            <ValidationMessage For="() => model.ContactPerson" />
                        </div>
                        <div class="col-md-4">
                            <label class="form-label bold-font required-field">Contact Number</label>
                            <InputText id="ContactNumber" @bind-Value="model.ContactNumber" class="form-control" />
                            <ValidationMessage For="() => model.ContactNumber" />
                        </div>
                        <div class="col-md-4">
                            <label class="form-label bold-font required-field">Email</label>
                            <InputText id="EmailId" @bind-Value="model.EmailId" class="form-control" />
                            <ValidationMessage For="() => model.EmailId" />
                        </div>
                    </div>

                    <!-- Accordion for Address, Bank, Zonal Office -->
                    <div class="accordion mb-4" id="companyAccordion">
                        <!-- Address -->
                        <div class="accordion-item">
                            <h2 class="accordion-header" id="headingAddress">
                                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseAddress" aria-expanded="true" aria-controls="collapseAddress">
                                    Address Details
                                </button>
                            </h2>
                            <div id="collapseAddress" class="accordion-collapse collapse show" aria-labelledby="headingAddress" data-bs-parent="#companyAccordion">
                                <div class="accordion-body">
                                    <div class="row g-3">
                                        <div class="col-md-6">
                                            <label class="form-label bold-font required-field">Address</label>
                                            <InputText id="Address" @bind-Value="model.Address" class="form-control" />
                                            <ValidationMessage For="() => model.Address" />
                                        </div>
                                        <div class="col-md-2">
                                            <label class="form-label bold-font required-field">State</label>
                                            <InputText id="State" @bind-Value="model.State" class="form-control" />
                                            <ValidationMessage For="() => model.State" />
                                        </div>
                                        <div class="col-md-2">
                                            <label class="form-label bold-font required-field">Country</label>
                                            <InputText id="Country" @bind-Value="model.Country" class="form-control" />
                                            <ValidationMessage For="() => model.Country" />
                                        </div>
                                        <div class="col-md-2">
                                            <label class="form-label bold-font required-field">PIN Code</label>
                                            <InputText id="PIN" @bind-Value="model.PIN" class="form-control" />
                                            <ValidationMessage For="() => model.PIN" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Bank -->
                        <div class="accordion-item">
                            <h2 class="accordion-header" id="headingBank">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseBank" aria-expanded="false" aria-controls="collapseBank">
                                    Bank Details
                                </button>
                            </h2>
                            <div id="collapseBank" class="accordion-collapse collapse" aria-labelledby="headingBank" data-bs-parent="#companyAccordion">
                                <div class="accordion-body">
                                    <div class="row g-3 mb-2">
                                        <div class="col-md-4">
                                            <label class="form-label bold-font required-field">Bank Name</label>
                                            <InputText id="BankName" @bind-Value="model.BankName" class="form-control" />
                                            <ValidationMessage For="() => model.BankName" />
                                        </div>
                                         <div class="col-md-4">
                                            <label class="form-label bold-font required-field">IFSC Code</label>
                                            <InputText id="IFSC" @bind-Value="model.IFSC" class="form-control" />
                                            <ValidationMessage For="() => model.IFSC" />
                                        </div>
                                        <div class="col-md-4">
                                            <label class="form-label bold-font required-field">Swift Code</label>
                                            <InputText id="SwiftCode" @bind-Value="model.SwiftCode" class="form-control" />
                                            <ValidationMessage For="() => model.SwiftCode" />
                                        </div>
                                    </div>
                                    <div class="row g-3 mb-2">
                                        <div class="col-md-12">
                                            <label class="form-label bold-font required-field">Account Number</label>
                                            <InputText id="AccNumber" @bind-Value="model.AccNumber" class="form-control" />
                                            <ValidationMessage For="() => model.AccNumber" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Zonal Office -->
                        <div class="accordion-item">
                            <h2 class="accordion-header" id="headingZonal">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseZonal" aria-expanded="false" aria-controls="collapseZonal">
                                    Zonal Office
                                </button>
                            </h2>
                            <div id="collapseZonal" class="accordion-collapse collapse" aria-labelledby="headingZonal" data-bs-parent="#companyAccordion">
                                <div class="accordion-body">
                                    <a class="btn btn-dark mb-3" @onclick="() => { AddZone = true; }">
                                        <i class="fa fa-thumb-tack" aria-hidden="true"></i> Add Zone
                                    </a>
                                    <div class="table-responsive">
                                        <table class="table table-striped table-bordered nowrap">
                                            <tbody>
                                                @foreach (var SubOffice in subOfficeAddress)
                                                {
                                                    <tr>
                                                        <td style="width: 2%">
                                                            <div class="d-md-flex align-items-center">
                                                                <label for="number" class="bold-font mb-0">@SubOffice.Number</label>
                                                            </div>
                                                        </td>
                                                        <td style="width: 20%">
                                                            <input type="text" class="form-control" @bind="@SubOffice.subName" placeholder="Office Address" />
                                                        </td>
                                                        <td style="width: 20%">
                                                            <input type="text" class="form-control" @bind="@SubOffice.subContPerson" placeholder="Contact Person" />
                                                        </td>
                                                        <td style="width: 20%">
                                                            <input type="text" class="form-control" @bind="@SubOffice.subCont" placeholder="Contact Number" />
                                                        </td>
                                                        <td style="width: 16%">
                                                            <select class="form-select" @bind="@SubOffice.SubOficeZone">
                                                                <option>- Select Zone -</option>
                                                                @foreach (var z in Zones)
                                                                {
                                                                    <option value="@z.ZoneName">@z.ZoneName</option>
                                                                }
                                                            </select>
                                                        </td>
                                                        <td style="width: 2%">
                                                            <a title="Remove Office" style="cursor:pointer; color:red; display:inline-block; line-height: 1;" @onclick="() => RemoveParent(SubOffice)">
                                                                <i class="fa fa-times-circle fa-2x" aria-hidden="true" style="vertical-align: middle;"></i>
                                                            </a>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td colspan="6" style="padding: 5px 0 !important;">
                                                            <table class="table">
                                                                <thead style="text-align:center">
                                                                    <tr>
                                                                        <th style="width: 5%">No.</th>
                                                                        <th style="width: 20%">Office Name</th>
                                                                        <th style="width: 40%">Address</th>
                                                                        <th style="width: 15%">Contact Person</th>
                                                                        <th style="width: 15%">Contact Number</th>
                                                                        <th style="width: 5%">
                                                                            <a title="Add Row" style="cursor:pointer; color:darkblue" @onclick="() => AddChild(SubOffice)">
                                                                                <i class="fa fa-plus-circle fa-2x" aria-hidden="true"></i>
                                                                            </a>
                                                                        </th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    @foreach (var zonalOffice in SubOffice.Zoffice)
                                                                    {
                                                                        <tr>
                                                                            <td><input type="text" class="form-control" @bind="@zonalOffice.Number" /></td>
                                                                            <td><input type="text" class="form-control" @bind="@zonalOffice.zoName" /></td>
                                                                            <td><input type="text" class="form-control" @bind="@zonalOffice.zoAddress" /></td>
                                                                            <td><input type="text" class="form-control" @bind="@zonalOffice.zoContPerson" /></td>
                                                                            <td><input type="text" class="form-control" @bind="@zonalOffice.zoCont" /></td>
                                                                            <td style="text-align:center">
                                                                                <a title="Remove Row" style="cursor:pointer;" @onclick="() => RemoveChild(SubOffice, zonalOffice)">
                                                                                    <i class="fa fa-trash fa-2x text-danger" aria-hidden="true"></i>
                                                                                </a>
                                                                            </td>
                                                                        </tr>
                                                                    }
                                                                </tbody>
                                                            </table>
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                        <div class="text-center">
                                            <a class="btn btn-primary col-md-12 mb-2" @onclick="AddParent">Add Office</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr/>
                    <div class="row justify-content-center mt-4">
                                <div class="col-auto">
                                    <button type="submit" class="btn btn-success px-5">
                                        <i class="fa fa-check me-2"></i>Submit
                                    </button>
                                </div>
                                <div class="col-auto">
                                    <button type="button" class="btn btn-danger px-5" @onclick="OnClose">
                                        <i class="fa fa-times me-2"></i>Close
                                    </button>
                                </div>
                    </div>
                    <br />
                </EditForm>
                
                <Dailog Title="@Message" Show="@show" OnCloseDialog="ResetForm">
                    @if (show)
                    {
                        @if (TaskCompleted)
                        {
                            <div class="text-center">
                                @MessageBody
                            </div>
                        }
                        else
                        {
                            <div class="text-center">
                                <div class="lds-ellipsis"><div></div><div></div><div></div><div></div></div>
                            </div>
                        }
                    }
                </Dailog>
                
                <PageDialog Title="Add Zones" Show="AddZone" OnCloseDialog="ClosePopUp">
                    <AddZoneArea />
                </PageDialog>
            }
        </div>
    </div>
}
else
{
    <div class="col-sm-12" style="margin-top:40vh">
        <div class="loader-progress"></div>
    </div>
}


@code {
    [Parameter]
    public int Id { get; set; }
    
    private static bool canView = false;
    private static bool canEdit = false;
    private static bool hasFullAccess = false;
    private bool AddZone = false;
    private List<ClientBreadcrumbItem> breadcrumbItems = new();
    
    public string Title => model?.Id > 0 ? "Modify Company" : "Add Company";

    private bool show = false;
    private string Message = string.Empty;
    private string MessageBody = "Thank you!";
    private bool TaskCompleted = false;
    private Company model = new();
    private List<ZoneArea> Zones = new();
    private List<SubOffice> subOfficeAddress { get; set; } = new List<SubOffice>();

    protected override async Task OnInitializedAsync()
    {
        breadcrumbItems = new()
        {
            new ClientBreadcrumbItem { Text = "Home", Url = "/" },
            new ClientBreadcrumbItem { Text = Title, IsActive = true }
        };
        var permissions = await PermissionService.HasPermission("Add Company");
        if (permissions != null)
        {
            canView = permissions.CanView;
            canEdit = permissions.CanEdit;
            hasFullAccess = permissions.HasFullAccess;
        }

        if (!canView)
        {
            NavigationManager.NavigateTo("/unauthorized");
            return;
        }
        
        Zones = new List<ZoneArea>(await client.GetAllZoneArea());
        
        if (Id > 0)
        {
            model = await client.GetCompanyById(Id);
            var Data = await client.GetSubOfficeByCompanyId(Id);
            subOfficeAddress = Data.ToList();
        }
        else
        {
            model = new();
            subOfficeAddress = new List<SubOffice>() { new SubOffice() { Number = 1 } };
        }
    }

    protected async Task OnValidSubmit()
    {
        Message = string.Empty;
        MessageBody = "Thank you!";
        show = true;
        TaskCompleted = false;
        
        try
        {
            Message = "Please wait";
            int Id = model.Id;
            model.CompanyCode = model.CompanyCode.ToUpper();
            var response = await client.UpsertCompanyAsync(model);
            
            if (response.IsSuccess)
            {
                model = response.Result;
                foreach (var o in subOfficeAddress)
                {
                    o.CompanyId = model.Id;
                }
                subOfficeAddress = await client.UpsertSubOfficeAsync(subOfficeAddress);
                Message = Id > 0 ? "Successfully Updated" : "Successfully Added";
                TaskCompleted = true;
            }
            else
            {
                Message = "Error!";
                MessageBody = response.Message;
                TaskCompleted = true;
            }
        }
        catch (Exception ex)
        {
            logger.LogCritical(ex, ex.Message);
            Message = "Error!";
            MessageBody = ex.Message;
            TaskCompleted = true;
        }
    }

    private void ResetForm()
    {
        show = false;
        if (Message.Contains("Successfully Added"))
        {
            model = new();
        }
    }

    private void OnClose()
    {
        NavigationManager.NavigateTo("/companies");
    }

    private void AddParent()
    {
        subOfficeAddress.Add(new SubOffice() { Number = subOfficeAddress.Count + 1 });
    }

    private void RemoveParent(SubOffice subOffice)
    {
        subOfficeAddress.Remove(subOffice);
        UpdateQuestionNumbers(subOfficeAddress);
    }

    private void AddChild(SubOffice subOffice)
    {
        var subZonalOfficeAddress = new Zoffice
        {
            Number = subOffice.Zoffice.Count + 1
        };
        subOffice.Zoffice.Add(subZonalOfficeAddress);
        UpdateOrderNumbers(subOffice.Zoffice);
    }

    private void RemoveChild(SubOffice subOffice, Zoffice zonalOffice)
    {
        subOffice.Zoffice.Remove(zonalOffice);
        UpdateOrderNumbers(subOffice.Zoffice);
    }

    private void UpdateOrderNumbers(IEnumerable<Zoffice> Zonalffices)
    {
        int orderNumber = 1;
        foreach (var Zonalffice in Zonalffices)
        {
            Zonalffice.Number = orderNumber++;
        }
    }

    private void UpdateQuestionNumbers(IEnumerable<SubOffice> subOfficeAddress)
    {
        int orderNumber = 1;
        foreach (var office in subOfficeAddress)
        {
            office.Number = orderNumber++;
        }
    }

    private async void ClosePopUp()
    {
        show = false;
        AddZone = false;
        Zones = new List<ZoneArea>(await client.GetAllZoneArea());
        StateHasChanged();
    }
}