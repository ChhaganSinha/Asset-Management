@page "/login"
@layout LoginLayout
@inject NavigationManager navigationManager
@inject IdentityAuthenticationStateProvider authStateProvider
@using Microsoft.AspNetCore.Components.Forms
@using AssetManagement.Client.States
@using AssetManagement.Dto.Auth

<div class="d-flex justify-content-center align-items-center vh-100 auth-bg">
    <div class="card borderd shadow-lg w-100" style="max-width: 500px; opacity:0.92;">
        <div class="card-body">
            <!-- Logo -->
            <div class="text-center mb-4">
                <img src="/assets/img/logo.png" alt="Logo" class="img-fluid mb-3" width="70" />
                <h3 class="mb-3">Sign In</h3>
            </div>

            <!-- Sign In Form -->
            <EditForm OnValidSubmit="OnSubmit" Model="loginParameters">
                <DataAnnotationsValidator />

                <!-- Email Input -->
                <div class="mb-3">
                    <label for="email" class="form-label">Email Address</label>
                    <input id="email" type="email" @bind="loginParameters.UserEmail" class="form-control" placeholder="Enter your email" required />
                    <ValidationMessage For="@(() => loginParameters.UserEmail)" />
                </div>

                <!-- Password Input -->
                <div class="mb-3">
                    <label for="password" class="form-label">Password</label>
                    <input id="password" type="password" @bind="loginParameters.Password" class="form-control" placeholder="Enter your password" required />
                    <ValidationMessage For="@(() => loginParameters.Password)" />
                </div>

                <!-- Remember Me -->
                <div class="form-check mb-3">
                    <input id="rememberMe" type="checkbox" class="form-check-input" @bind="loginParameters.RememberMe" />
                    <label class="form-check-label" for="rememberMe">Remember Me</label>
                </div>

                <!-- Sign In Button -->
                <button type="submit" class="btn btn-primary w-100">Sign In</button>
                <p class="text-danger mt-2">@error</p>
            </EditForm>

            <!-- Forgot Password and Signup Links -->
            <div class="text-center mt-3">
                <p class="mb-1">
                    <a href="forgetpassword" class="text-primary">Forgot Password?</a>
                </p>
                @if (userCount == 0)
                {
                    <p>
                        Don’t have an account? <a href="register" class="text-primary">Sign Up</a>
                    </p>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private LoginParameters loginParameters { get; set; } = new LoginParameters();
    private string error { get; set; }
    private int userCount = 1;

    private async Task OnSubmit()
    {
        error = null;
        try
        {
            await authStateProvider.Login(loginParameters);
            navigationManager.NavigateTo("");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        userCount = await authStateProvider.GetUserCount();
    }
}
